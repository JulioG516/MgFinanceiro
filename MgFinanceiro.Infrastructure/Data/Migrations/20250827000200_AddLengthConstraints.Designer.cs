// <auto-generated />
using System;
using MgFinanceiro.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MgFinanceiro.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250827000200_AddLengthConstraints")]
    partial class AddLengthConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MgFinanceiro.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nome", "Tipo")
                        .IsUnique()
                        .HasFilter("Ativo = 1");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4120),
                            Nome = "Vendas de Produtos",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4259),
                            Nome = "Prestação de Serviços",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4261),
                            Nome = "Juros e Rendimentos Financeiros",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4263),
                            Nome = "Outras Receitas Operacionais",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4264),
                            Nome = "Salários e Encargos",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4265),
                            Nome = "Aluguel e Manutenção Predial",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 7,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4268),
                            Nome = "Compras de Mercadorias",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 8,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4269),
                            Nome = "Impostos e Taxas",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 9,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4270),
                            Nome = "Despesas com Marketing",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 10,
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(4271),
                            Nome = "Despesas Administrativas",
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("MgFinanceiro.Domain.Entities.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("Data");

                    b.ToTable("Transacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Data = new DateTime(2025, 8, 22, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(8547),
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(7933),
                            Descricao = "Venda de produtos para cliente A",
                            Valor = 1500.00m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            Data = new DateTime(2025, 8, 24, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(8983),
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(8981),
                            Descricao = "Prestação de serviço de consultoria",
                            Valor = 800.00m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 5,
                            Data = new DateTime(2025, 8, 17, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(8988),
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(8987),
                            Descricao = "Pagamento de salários mensais",
                            Valor = 2000.00m
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 7,
                            Data = new DateTime(2025, 8, 25, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(8990),
                            DataCriacao = new DateTime(2025, 8, 27, 0, 2, 0, 45, DateTimeKind.Utc).AddTicks(8989),
                            Descricao = "Compra de estoque",
                            Valor = 1200.00m
                        });
                });

            modelBuilder.Entity("MgFinanceiro.Domain.Entities.Transacao", b =>
                {
                    b.HasOne("MgFinanceiro.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Transacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MgFinanceiro.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
